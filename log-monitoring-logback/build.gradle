plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'io.astronuts'
version = '0.0.1'
archivesBaseName = "log-monitoring-logback"
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'ch.qos.logback:logback-classic:1.5.4'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'
    implementation 'org.slf4j:slf4j-api:2.0.12'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

// Publishing to Maven Central
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'Log Monitoring Logback'
                description = 'A custom Logback appender for log monitoring and shipping.'
                url = 'https://github.com/astronuts-app/log-monitoring'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'arunkpatra'
                        name = 'Arun Patra'
                        email = 'arun@astronuts.io'
                    }
                }

                scm {
                    connection = 'scm:git:github.com/astronuts-app/log-monitoring.git'
                    developerConnection = 'scm:git:ssh://github.com/astronuts-app/log-monitoring.git'
                    url = 'https://github.com/astronuts-app/log-monitoring'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv('OSSRH_USERNAME')
                password = System.getenv('OSSRH_PASSWORD')
            }
        }
    }
}

// Only attempt to sign if we're not publishing to Maven Local
//if (gradle.taskGraph.allTasks.any { it.name == 'publishToMavenLocal' }) {
signing {
    useInMemoryPgpKeys(System.getenv("MAVEN_SIGNING_KEY_ID"), System.getenv("MAVEN_SIGNING_KEY"), System.getenv("MAVEN_SIGNING_PASSWORD"))
    sign publishing.publications
}
//}

// Signing the published artifacts
//signing {
//    useInMemoryPgpKeys(System.getenv("MAVEN_SIGNING_KEY_ID"), System.getenv("MAVEN_SIGNING_KEY"), System.getenv("MAVEN_SIGNING_PASSWORD"))
//    //sign publishing.publications.mavenJava
//    sign configurations.archives
//}

java {
    withSourcesJar()
    withJavadocJar()
}


artifacts {
    archives javadocJar, sourcesJar
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}